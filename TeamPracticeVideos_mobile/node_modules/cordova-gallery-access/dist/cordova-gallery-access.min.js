require=function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";var Permission={GET_ALBUMS:"get-album"};function ensurePermission(permission){if(!window.cordova||!window.cordova.plugins||!window.cordova.plugins.permissions){return Promise.resolve()}var devicePermission=void 0;switch(permission){case Permission.GET_ALBUMS:devicePermission=window.cordova.plugins.permissions.READ_EXTERNAL_STORAGE;break;default:throw new Error("Unsupported permission "+permission+".")}return hasPermission(devicePermission).then(function(status){if(status.hasPermission){return true}return requestPermission(devicePermission)})}function hasPermission(permission){return new Promise(function(resolve,reject){window.cordova.plugins.permissions.hasPermission(permission,function(status){return resolve(status)},function(e){return reject(e)})})}function requestPermission(permission){return new Promise(function(resolve,reject){window.cordova.plugins.permissions.requestPermission(permission,function(status){if(status.hasPermission){resolve(status)}else{reject(status)}},function(e){return reject(e)})})}module.exports={ensurePermission:ensurePermission,Permission:Permission}},{}],"cordova-gallery-access":[function(require,module,exports){"use strict";var permissionsChecker=require("./permissions-checker.js");var load=function load(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$count=_ref.count,count=_ref$count===undefined?5:_ref$count;if(!window.galleryAPI){throw new Error("Gallery API is not available. Add https://github.com/SuryaL/cordova-gallery-api.git to your config.xml.")}return permissionsChecker.ensurePermission(permissionsChecker.Permission.GET_ALBUMS).then(function(){return getAlbums()}).then(function(albums){var album=_findCameraRollAlbum(albums);return getMedia(album)}).then(function(items){var limitedItems=items.slice(0,count);var promises=limitedItems.map(function(item){return getMediaThumbnail(item)});return Promise.all(promises)})};var _findCameraRollAlbum=function _findCameraRollAlbum(albums){var isCameraRollAlbum=albums.find(function(album){return album.type==="PHAssetCollectionSubtypeSmartAlbumUserLibrary"});if(isCameraRollAlbum){return isCameraRollAlbum}var androidCameraRollAlbum=albums.find(function(album){return album.title==="Camera"});if(androidCameraRollAlbum){return androidCameraRollAlbum}throw new Error("Can't find Camera Roll album. Available albums: "+JSON.stringify(albums))};var getAlbums=function getAlbums(){return new Promise(function(resolve,reject){window.galleryAPI.getAlbums(function(albums){return resolve(albums)},function(e){return reject("Failed to get albums: "+e)})})};var getMedia=function getMedia(album){return new Promise(function(resolve,reject){window.galleryAPI.getMedia(album,function(items){return resolve(items)},function(e){return reject("Failed to load items for album "+album.id+": "+e)})})};var getMediaThumbnail=function getMediaThumbnail(item){return new Promise(function(resolve,reject){window.galleryAPI.getMediaThumbnail(item,function(enrichedItem){return resolve(enrichedItem)},function(e){return reject("Failed to load thumbnail for item "+item.id+": "+e)})})};var getHQImageData=function getHQImageData(item){return new Promise(function(resolve,reject){window.galleryAPI.getHQImageData(item,function(hqFilePath){return resolve("file://"+hqFilePath)},function(e){return reject("Failed to load HQ image data for item "+item.id+": "+e)})})};var getFile=function getFile(filePath){return resolveLocalFileSystemURL(filePath).then(function(fileEntry){return enrichFile(fileEntry)})};var resolveLocalFileSystemURL=function resolveLocalFileSystemURL(filePath){return new Promise(function(resolve,reject){window.resolveLocalFileSystemURL(filePath,function(fileEntry){return resolve(fileEntry)},function(e){return reject("Failed to resolve URL for path "+filePath+": "+JSON.stringify(e))})})};var enrichFile=function enrichFile(fileEntry){return new Promise(function(resolve,reject){fileEntry.file(function(file){fileEntry.name=file.name;fileEntry.size=file.size;fileEntry.type=file.type;resolve(fileEntry)},function(e){return reject("Failed to resolve file entry "+fileEntry+": "+JSON.stringify(e))})})};var isSupported=function isSupported(){return Boolean(window.galleryAPI)};module.exports={load:load,getHQImageData:getHQImageData,getFile:getFile,isSupported:isSupported,_findCameraRollAlbum:_findCameraRollAlbum}},{"./permissions-checker.js":1}]},{},[]);